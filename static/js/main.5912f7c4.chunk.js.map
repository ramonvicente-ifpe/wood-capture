{"version":3,"sources":["firebase/firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","handleChange","e","target","files","setState","image","handleUpload","file","state","uploadTask","storage","ref","child","name","put","on","TaskEvent","STATE_CHANGED","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","getDownloadURL","then","url","downloadURL","document","getElementById","value","className","type","id","onChange","this","onClick","src","alt","height","width","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mQAYAA,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKFR,QAAf,E,OCVqBS,E,kDACnB,aAAc,IAAD,8BACX,gBASFC,aAAe,SAACC,GACXA,EAAEC,OAAOC,MAAM,IAChB,EAAKC,SAAS,CACdC,MAAOJ,EAAEC,OAAOC,MAAM,MAbb,EAmBfG,aAAe,WAEb,IAAIC,EAAO,EAAKC,MAAMH,MAGlBI,EAFUnB,EAASoB,UACEC,MACGC,MAAM,UAAYL,EAAKM,MAAMC,IAAIP,GAE7DE,EAAWM,GAAGzB,EAASoB,QAAQM,UAAUC,eACvC,SAACC,GACC,IAAIC,EAAuE,IAA5DC,KAAKC,MAAOH,EAASI,iBAAiBJ,EAASK,YAC9D,EAAKnB,SAAS,CAACe,gBACf,SAACK,GACD,MAAMA,KACN,WAGAf,EAAWS,SAASP,IAAIc,iBAAiBC,MAAK,SAACC,GAC7C,EAAKvB,SAAS,CACZwB,YAAaD,OAGnBE,SAASC,eAAe,QAAQC,MAAQ,SAtCxC,EAAKvB,MAAQ,CACXH,MAAO,KACPc,SAAS,EACTS,YAAa,MALJ,E,0CA+Cb,WACE,OACE,sBAAKI,UAAU,MAAf,UACE,8CACA,gDAEA,uBAAOC,KAAK,OAAOC,GAAG,OAAOC,SAAUC,KAAKpC,kBAG3CoC,KAAK5B,MAAMW,SACZ,wBAAQa,UAAU,SAASK,QAASD,KAAK9B,aAAzC,oBACA,qBACE0B,UAAU,MACVM,IAAKF,KAAK5B,MAAMoB,aAAe,sCAC/BW,IAAI,kBACJC,OAAO,MACPC,MAAM,e,GAhEiBC,aCQlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASC,eAAe,SAM1Ba,M","file":"static/js/main.5912f7c4.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD9WEwYy9tUo_gG7P5lwCuIt4aT-LghobM\",\n  authDomain: \"wood-capture.firebaseapp.com\",\n  projectId: \"wood-capture\",\n  storageBucket: \"wood-capture.appspot.com\",\n  messagingSenderId: \"338981321175\",\n  appId: \"1:338981321175:web:806c30bfcf31e19c237392\",\n  measurementId: \"G-0Q15X74W4G\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, { Component } from 'react'\nimport './App.css';\nimport firebase from \"./firebase/firebase\"\n\nexport default class App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      image: null,\n      progress:0,\n      downloadURL: null\n    }\n  }\n\n\n  handleChange = (e) =>{\n    if(e.target.files[0]){\n      this.setState({\n      image: e.target.files[0]\n    })\n  }\n    // console.log(e.target.files[0])\n}\n\nhandleUpload = () =>{\n  // console.log(this.state.image);\n  let file = this.state.image;\n  var storage = firebase.storage();\n  var storageRef = storage.ref();\n  var uploadTask = storageRef.child('folder/' + file.name).put(file);\n\n  uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,\n    (snapshot) =>{\n      var progress = Math.round((snapshot.bytesTransferred/snapshot.totalBytes))*100\n      this.setState({progress})\n    },(error) =>{\n      throw error\n    },() =>{\n      // uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) =>{\n\n      uploadTask.snapshot.ref.getDownloadURL().then((url) =>{\n        this.setState({\n          downloadURL: url\n        })\n      })\n    document.getElementById(\"file\").value = null\n\n   }\n ) \n}\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h4>upload image</h4>\n        <label>\n          Choose file\n        <input type=\"file\" id=\"file\" onChange={this.handleChange} />        \n        </label>\n\n        {this.state.progress}\n        <button className=\"button\" onClick={this.handleUpload}>Upload</button>\n        <img\n          className=\"ref\"\n          src={this.state.downloadURL || \"https://via.placeholder.com/400x300\"}\n          alt=\"Uploaded Images\"\n          height=\"300\"\n          width=\"400\"\n        />\n      </div>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}